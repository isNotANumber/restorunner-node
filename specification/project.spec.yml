openapi: 3.1.0
info:
  title: API server for «Restorunner» project.
  description: |-
    * Resourses and routes list for «Restorunner» server.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: categories
    description: Actions with categories.
  - name: offers
    description: Actions with offers.
  - name: users
    description: Actions with users.

paths:
  /categories:
    get:
      tags:
        - categories
      summary: Get all categories.
      description: Get all offers categories.

  /offers:
    get:
      tags:
        - offers
      summary: Get all offers.
      description: Get all offers.

  /offers/favorites:
    get:
      tags:
        - offers
      summary: Get user favorites offers.
      description: Get user favorites offers. Only for autorized users.

  /offers/favorites/add/{offerId}:
    patch:
      tags:
        - offers
      summary: Add offer to favorites.
      description: Add offer to favorites. Only for autorized users.

  /offers/favorites/remove/{offerId}:
    patch:
      tags:
        - offers
      summary: Remove offer from favorites.
      description: Remove offer from favorites. Only for autorized users.

  /user/register:
    post:
      tags:
        - users
      summary: User register.
      description: Register a new user.
      requestBody:
        description: New user creation info.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: User registred. User object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "409":
          description: User with that email already registered.

  /user/login:
    post:
      tags:
        - users
      summary: User authorization.
      description: Authorize ueser by login and password.

    get:
      tags:
        - users
      summary: Check user state.
      description: Returns autorized user state.

  /user/{userId}/avatar:
    post:
      tags:
        - users
      summary: Upload user avatar image.
      description: Upload user avatar image.
        Image must be 'png' or 'jpg' format.

components:
  schemas:
    createUser:
      type: object
      properties:
        email:
          type: string
          example: test@test.com

        firstname:
          type: string
          example: Test

        lastname:
          type: string
          example: Testoff

        password:
          type: string
          example: 111

    user:
      type: object
      properties:
        id:
          type: string
          example: 5123c1a5c12bc2215c6205ae

        email:
          type: string
          example: test@test.com
